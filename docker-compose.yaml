version: "3"

volumes:
  postgres:
  postgres_data:
  grafana_data:
  grafana_log:
  grafana_plugins:
  grafana_provisioning:
  prometheus:
  postgres_exporter_data:

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=example
    volumes:
      - postgres:/var/lib/postgresql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres -h localhost"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 0s

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - ENV GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel,grafana-simple-json-datasource
      - GF_LOG_MODE=console
      - TZ=America/Sao_Paulo
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_log:/var/log/grafana
      - grafana_plugins:/var/lib/grafana/plugins
      - grafana_provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus:/etc/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  postgres_exporter:
    image: wrouesnel/postgres_exporter:latest
    container_name: postgres_exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:example@postgres:5432/?sslmode=disable
    volumes:
      - postgres_exporter_data:/var/lib/postgres_exporter
    ports:
      - "9187:9187"
    depends_on:
      postgres:
        condition: service_healthy

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    volumes:
      - /:/rootfs:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    ports:
      - "9100:9100"

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    privileged: true
    command: "-port 9188"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /etc/machine-id:/etc/machine-id:ro
    # ports:
    #   - "9188:8080"
